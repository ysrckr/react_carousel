{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Container/Container.tsx","components/Form/Form.tsx","components/Input/Input.tsx","components/CheckBox/CheckBox.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","transformSize","setTransformSize","counter","setCounter","imageStyle","width","itemStyle","transform","transition","listStyle","className","style","map","image","idx","src","alt","String","type","onClick","prev","length","Math","ceil","Container","children","Form","Input","label","option","changeHandler","htmlFor","value","onChange","CheckBox","name","checked","App","state","stepChangeHandler","event","target","Number","isNaN","setState","frameSizeChangeHandler","itemWidthHandler","animationDurationHandler","infiniteHandler","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c00094f.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport './Carousel.scss';\n\nimport type { State as CarouselProps } from '../../App';\n\nexport const Carousel: FC<CarouselProps> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [transformSize, setTransformSize] = useState(0);\n  const [counter, setCounter] = useState(0);\n\n  const imageStyle = {\n    width: `${itemWidth}px`,\n  };\n\n  const itemStyle = {\n    width: `${itemWidth}px`,\n    transform: `translateX(-${transformSize}px)`,\n    transition: `transform ${animationDuration}s ease-in-out`,\n  };\n\n  const listStyle = {\n    width: `${(itemWidth * frameSize)}px`,\n  };\n\n  const handleNext = () => {\n    const length = Math.ceil(images.length / (frameSize * step));\n\n    if (infinite\n      && counter === length) {\n      setTransformSize(0);\n      setCounter(0);\n    } else {\n      setTransformSize((prev) => prev + itemWidth * step);\n      setCounter((prev) => prev + 1);\n    }\n  };\n\n  const handlePrev = () => {\n    if (infinite && counter === 0) {\n      setTransformSize((frameSize * itemWidth * step) - itemWidth * step);\n    } else {\n      setTransformSize((prev) => prev - itemWidth * step);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul className=\"Carousel__list\" style={listStyle}>\n        {images.map((image, idx) => (\n          <li\n            className=\"Carousel__item\"\n            style={itemStyle}\n            key={image}\n          >\n            <img\n              src={image}\n              alt={String(idx + 1)}\n              className=\"Carousel__image\"\n              style={imageStyle}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__controls\">\n        <button\n          type=\"button\"\n          onClick={handlePrev}\n          className=\"Carousel__button Carousel__button--prev\"\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={handleNext}\n          className=\"Carousel__button Carousel__button--next\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { FC } from 'react';\n\nimport './Container.scss';\n\nexport const Container: FC = ({ children }) => (\n  <div className=\"Container\">{children}</div>\n);\n","import { FC } from 'react';\n\nimport './Form.scss';\n\nexport const Form: FC = ({ children }) => (\n  <form className=\"Form\">{children}</form>\n);\n","import {\n  ChangeEvent,\n  FC,\n} from 'react';\n\nimport './Input.scss';\n\ntype Props = {\n  label: string;\n  option: number;\n  changeHandler: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const Input: FC<Props> = ({ label, option, changeHandler }) => {\n  return (\n    <label className=\"Input__label\" htmlFor={label}>\n      {label}\n      <input\n        type=\"text\"\n        value={option}\n        onChange={changeHandler}\n      />\n    </label>\n  );\n};\n","import { FC, ChangeEvent } from 'react';\n\nimport './CheckBox.scss';\n\ntype Props = {\n  infinite: boolean;\n  changeHandler: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const CheckBox: FC<Props> = ({ infinite, changeHandler }) => {\n  return (\n    <label htmlFor=\"checkbox\">\n      {'Infinite: '}\n      <input\n        type=\"checkbox\"\n        className=\"CheckBox\"\n        name=\"checkbox\"\n        checked={infinite}\n        onChange={changeHandler}\n      />\n    </label>\n  );\n};\n","import { ChangeEvent, Component } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Container } from './components/Container';\nimport { Form } from './components/Form';\nimport { Input } from './components/Input';\nimport { CheckBox } from './components/CheckBox';\n\nexport interface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1,\n    infinite: false,\n  };\n\n  stepChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value === ''\n      || Number(event.target.value) < 1\n      || Number.isNaN(Number(event.target.value))) {\n      this.setState({\n        step: 1,\n      });\n    }\n\n    this.setState({\n      step: Number(event.target.value),\n    });\n  };\n\n  frameSizeChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    if (\n      event.target.value === ''\n      || Number(event.target.value) < 1\n      || Number.isNaN(Number(event.target.value))\n    ) {\n      this.setState({\n        frameSize: 1,\n      });\n    }\n\n    this.setState({\n      frameSize: Number(event.target.value),\n    });\n  };\n\n  itemWidthHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    if (\n      event.target.value === ''\n      || Number(event.target.value) < 90\n      || Number.isNaN(Number(event.target.value))\n    ) {\n      this.setState({\n        itemWidth: 90,\n      });\n    }\n\n    this.setState({\n      itemWidth: Number(event.target.value),\n    });\n  };\n\n  animationDurationHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    if (\n      event.target.value === ''\n      || Number(event.target.value) < 1\n      || Number.isNaN(Number(event.target.value))\n    ) {\n      this.setState({\n        animationDuration: 1,\n      });\n    }\n\n    this.setState({\n      animationDuration: Number(event.target.value),\n    });\n  };\n\n  infiniteHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      infinite: event.target.checked,\n    });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\" className=\"App__title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Container>\n          <Carousel\n            images={images}\n            step={step}\n            frameSize={frameSize}\n            itemWidth={itemWidth}\n            animationDuration={animationDuration}\n            infinite={infinite}\n          />\n        </Container>\n\n        <Form>\n          <Input\n            label=\"Step\"\n            option={step}\n            changeHandler={this.stepChangeHandler}\n          />\n\n          <Input\n            label=\"Frame size\"\n            option={frameSize}\n            changeHandler={this.frameSizeChangeHandler}\n          />\n\n          <Input\n            label=\"Item width\"\n            option={itemWidth}\n            changeHandler={this.itemWidthHandler}\n          />\n\n          <Input\n            label=\"Animation duration\"\n            option={animationDuration}\n            changeHandler={this.animationDurationHandler}\n          />\n\n          <CheckBox\n            infinite={infinite}\n            changeHandler={this.infiniteHandler}\n          />\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}